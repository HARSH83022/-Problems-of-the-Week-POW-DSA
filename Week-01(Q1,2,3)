 Q1-Problem of the Week – Min in Sorted Rotated Array
import java.util.Scanner;

public class FindMinRotatedArray {

    public static int findMin(int[] arr) {
        int low = 0;
        int high = arr.length - 1;

        while (low < high) {
            int mid = low + (high - low) / 2;

            if (arr[mid] > arr[high]) {
                low = mid + 1;
            } else {
                high = mid;
            }
        }

        return arr[low];
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int[] arr = new int[n];

        for(int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }

        System.out.println(findMin(arr));
        sc.close();
    }
}

Ques3 Problem Description: Ruby Second House (Medium)
You are a construction manager overseeing the painting of a long row of houses. Each house
must be painted one of several available colors. However, adjacent houses cannot have the
same color to preserve aesthetic appeal.
Each painting option has a different cost. You are given a matrix where costs[i][j]
represents the cost of painting house i with color j.
Your task is to paint all houses such that:
• No two adjacent houses share the same color.
• The total painting cost is minimized.
Solution=
public class RubySecondHouse {
    public static int minCost(int[][] costs) {
        if (costs == null || costs.length == 0) return 0;

        int n = costs.length;
        int k = costs[0].length;
        int[][] dp = new int[n][k];

        for (int j = 0; j < k; j++) {
            dp[0][j] = costs[0][j];
        }

        for (int i = 1; i < n; i++) {
            for (int j = 0; j < k; j++) {
                int min = Integer.MAX_VALUE;
                for (int m = 0; m < k; m++) {
                    if (m != j) {
                        min = Math.min(min, dp[i - 1][m]);
                    }
                }
                dp[i][j] = costs[i][j] + min;
            }
        }

        int result = Integer.MAX_VALUE;
        for (int j = 0; j < k; j++) {
            result = Math.min(result, dp[n - 1][j]);
        }

        return result;
    }

    public static void main(String[] args) {
        int[][] costs = {
            {17, 2, 17},
            {16, 16, 5},
            {14, 3, 19}
        };

        System.out.println("Minimum cost to paint all houses: " + minCost(costs));
    }
}
